---
- name: export variable
  shell: export JMX_PORT=${JMX_PORT-9999}

#- name: Set JMX_PORT persitently
#  lineinfile: dest=/etc/environment state=present regexp='^JMX_PORT'  line='JMX_PORT=9999'

- name: add group "kafka"
  group: name={{ kafka_group }} system=yes

- name: add user "kafka"
  user: name={{ kafka_group }} group={{ kafka_group }} shell=/sbin/nologin system=yes

- name: "Download the tarball"
  get_url: url="http://{{ apache_mirror }}/kafka/{{ kafka_version }}/kafka_2.11-{{ kafka_version }}.tgz" dest=/opt/kafka_2.11-{{ kafka_version }}.tgz

- name: Extract archive
  unarchive: src=/opt/kafka_2.11-{{ kafka_version }}.tgz dest=/opt/ copy=no creates=/opt/kafka_2.11-{{ kafka_version }}

- name: Symlink install directory
  file: src=/opt/kafka_2.11-{{ kafka_version }} path=/opt/kafka state=link

- name: Set permissions to Kafka folder
  file: path=/opt/kafka/ owner=root group=root recurse=yes

- name: Create Kafka data directory
  file: path="/disk{{ item.0 + 1 }}/kafka/data" state=directory owner={{ kafka_user }} group={{ kafka_group }}
  with_indexed_items: "{{ data_disks_devices }}"
  when: data_disks_devices is defined and data_disks_devices and data_disks_devices|length > 1

- name: Create Kafka data directory
  file: path=/kafka/data state=directory owner={{ kafka_user }} group={{ kafka_group }}
  when: data_disks_devices is not defined or not data_disks_devices or data_disks_devices|length <= 1

- name: Create Kafka log directory
  file: path={{ kafka_log_dir }} state=directory owner={{ kafka_user }} group={{ kafka_group }}

- name: Link the log directory
  file: src={{ kafka_log_dir }} path=/opt/kafka/logs state=link

- name: Create Kafka conf directory
  file: path={{ kafka_conf_dir }} state=directory owner=root group=root mode=755

- name: Install Kafka init script
  template: src=kafka-server.j2 dest=/etc/init.d/kafka-server mode=0755
  notify: reload systemd

- meta: flush_handlers

- name: Configure Kafka server
  template: src=server.properties.j2 dest="{{kafka_conf_dir}}/server.properties"
  notify: restart kafka

- name: Upload log4j configs
  copy: src={{ item }} dest="{{ kafka_conf_dir }}/" owner=root group=root mode=644
  with_items:
    - log4j.properties
    - tools-log4j.properties
  notify: restart kafka

- meta: flush_handlers

- name: Make sure Kafka is running
  service: name=kafka-server enabled=yes state=started

- name: Add Kafka binaries to PATH
  copy: src=kafka.sh dest=/etc/profile.d/ owner=root group=root mode=644
  notify: restart kafka